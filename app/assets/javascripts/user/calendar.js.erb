

var addMonths = function(yearObj) {
	for(var i = 0; i < 12; i++) {
		var month = {
			days: []
		}
		yearObj.months.push(month);
	}
}

var addDays = function(yearObj) {
	var year = parseInt(yearObj.year);
	for(var i = 0; i < 12; i++) {
		var date = new Date(year, i, 1);
		while(date.getMonth() === i) {
			var day = {
				events: []
			}
			yearObj.months[i].days.push(day);
			date.setDate(date.getDate() + 1);
		}
	}
}

var buildCalendarView = function(calendar) {
	
	$('#calendar_body').empty();
	$.each(calendar, function(w, week) {
		console.log('week index' + w);
		$('#calendar_body').append("<tr id='week_"+w+"'></tr>");
		$.each(week,function(d, day) {
			$('#week_'+w).append("<td id='"+day.year+"_"+day.month+"_"+day.date+"'><p class='"+day.status+"'>"+day.date+"</p></td>");
			$.each(day.events, function(i, e) {
				$("#"+day.year+"_"+day.month+"_"+day.date).append("<div class='event_marker event_profile_"+e.profile_id+"'></div>");

			});
		});
	});
}

var calendarStart = function(year, month) {
		var month_start = new Date(year, month, 1);
		var day = month_start.getDay();
		var start;
		if(day != 0) {
			start = new Date(year, month, -1*(day-1));
		}
		else {
			start = month_start;
		}
		
		return start;
	}

	var calendarEnd = function(year, month) {
		var month_end = new Date(year, month + 1, 0);
		var day = month_end.getDay();
		var ending;
		if(day != 6) {
			ending = new Date(year, month, month_end.getDate() + (6-day));
		}
		else {
			ending = month_end;
		}
		
		return ending;
	}

var upadateView = function(date, calendarEvents) {
	var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
	var y = date.getFullYear();
	var m = date.getMonth();
	var d = date.getDate();

	$('#month').text(months[m]+" "+ y);

	var starting = calendarStart(y,m);
	var ending = calendarEnd(y, m);

	var date = starting;

	var calendar = [];
	while(date.getTime() <= ending.getTime()) {
		var week = [];
		for(var i = 0; i < 7; i++) {
			var day = {
				year: date.getFullYear(),
				month: date.getMonth(),
				date: date.getDate(),
				events: []
			}
			if(day.month === m) {
				day.status = "active_day";
			}
			else {
				day.status = "inactive_day";
			}
			$.each(calendarEvents, function(i, object) {
				if(object.year === day.year) {
					$.each(calendarEvents[i].months[day.month].days[day.date -1].events, function(n, x) {
						day.events.push(x);
					});
				}
			});
			week.push(day);
			date.setDate(date.getDate() + 1);
		}

		calendar.push(week);
	}
	buildCalendarView(calendar);
	
	
}





var init = function(date, calendarEvents) {
	
	upadateView(date, calendarEvents);
	var y = date.getFullYear();
	var m = date.getMonth();
	var d = date.getDate();

}


var createEventsObj = function(events) {

	

	var all_events = events;
	console.log(events);

	var calendarEvents = [];

	var start_year = parseInt(all_events[0].start.slice(0,10).split('-')[0]);
	
	var first_y = {
		year: start_year,
		months: []
	}
	addMonths(first_y);
	addDays(first_y);

	calendarEvents.push(first_y);
	var year_index = 0;

	$.each(all_events, function(index, e) {
		var new_year = parseInt(e.start.slice(0,10).split('-')[0]);

		if(new_year !== start_year) {
			var y = {
				year: new_year,
				months: []
			}
			addMonths(y);
			addDays(y);
			start_year = new_year;
			calendarEvents.push(y);
			year_index++;
		}
		var month = e.start.slice(0,10).split('-')[1] -1;
		var day =	e.start.slice(0,10).split('-')[2] -1;
		calendarEvents[year_index].months[month].days[day].events.push(e);


	});
	
	console.log(calendarEvents);

	return calendarEvents;



}

